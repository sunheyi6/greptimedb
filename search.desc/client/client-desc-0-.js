searchState.loadedDescShard("client", 0, "new Output struct with output data(previously Output) and …\nOriginal Output struct carrying result data to …\nOutputMeta stores meta information produced/generated …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMay exist for query output. One can retrieve execution …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAlters an existing table using the provided alter …\nCreates a new table using the provided table expression.\nIngest a stream of RecordBatches that belong to a table, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMake a request to the database.\nRetry if connection fails, max_retries is the max number …\nMake an InsertRequests request to the database.\nMake an InsertRequests request to the database with hints.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nby grpc standard, only <code>Unavailable</code> is retryable, see: …\nExecutes a logical plan directly without SQL parsing.\nCreate database service client using catalog and schema\nCreate database service client using dbname.\nMake a RowInsertRequests request to the database.\nMake a RowInsertRequests request to the database with …\nSet the auth scheme for the database client.\nSet the catalog for the database client.\nSet the schema for the database client.\nSet the timezone for the database client.\nExecutes a SQL query without any hints.\nExecutes a SQL query with optional hints for query …\nSNAFU context selector for the <code>Error::ConvertFlightData</code> …\nSNAFU context selector for the <code>Error::ConvertSchema</code> variant\nSNAFU context selector for the <code>Error::CreateChannel</code> variant\nSNAFU context selector for the <code>Error::CreateTlsChannel</code> …\nContains the error value\nSNAFU context selector for the <code>Error::External</code> variant\nSNAFU context selector for the <code>Error::FlightGet</code> variant\nSNAFU context selector for the <code>Error::FlowServer</code> variant\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::IllegalFlightMessages</code>…\nSNAFU context selector for the …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::MissingField</code> variant\nContains the success value\nSNAFU context selector for the <code>Error::RegionServer</code> variant\nSNAFU context selector for the <code>Error::Server</code> variant\nSNAFU context selector for the <code>Error::Tonic</code> variant\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContext holds the catalog and schema information.\nOptions for insert operations.\n<code>Inserter</code> allows different components to share a unified …\nWhether to use append mode for the insert.\nThe catalog name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe schema name.\nConverts the insert options to a list of key-value string …\nTime-to-live for the inserted data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")