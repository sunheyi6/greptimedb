searchState.loadedDescShard("partition", 0, "Structs and traits for partitioning rule.\nProvides a Collider tool to convert <code>PartitionExpr</code> into a …\nGenerates a point matrix that contains permutations of …\nBiased suffix product of <code>matrix_foundation</code>’s values\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemap the normalized checkpoint data to the original …\nTotal number of combinations of <code>matrix_foundation</code>’s …\nRepresents an “atomic” Expression, which isn’t …\nCollider is used to collide a list of <code>PartitionExpr</code> into a …\nFurther restricted operation set.\nA simplified expression representation.\nHelper to collect values with their associated columns …\nCollect nucleons from an expression (handles AND …\nCollect nucleons from an operand\nCollide a <code>PartitionExpr</code> into multiple <code>AtomicExpr</code>s.\nGet the column name\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA map of column name to a list of <code>(value, normalized value)</code>…\nA (ordered) list of simplified expressions. They are …\nGet the operation\nIndex to reference the <code>PartitionExpr</code> that this <code>AtomicExpr</code> …\nTry to create a nucleon from operands\nGet the normalized value\nNormalized <code>Value</code>.\nSNAFU context selector for the <code>Error::CheckpointNotCovered</code> …\nSNAFU context selector for the <code>Error::CheckpointOverlapped</code> …\nSNAFU context selector for the <code>Error::ComputeArrowKernel</code> …\nSNAFU context selector for the <code>Error::ConvertScalarValue</code> …\nSNAFU context selector for the <code>Error::ConvertToVector</code> …\nSNAFU context selector for the <code>Error::CreatePhysicalExpr</code> …\nSNAFU context selector for the <code>Error::DeserializeJson</code> …\nSNAFU context selector for the <code>Error::DuplicateExpr</code> variant\nContains the error value\nSNAFU context selector for the <code>Error::EvaluateRecordBatch</code> …\nSNAFU context selector for the <code>Error::FindLeader</code> variant\nSNAFU context selector for the <code>Error::FindRegionRoutes</code> …\nSNAFU context selector for the <code>Error::FindTableRoutes</code> …\nSNAFU context selector for the <code>Error::GetCache</code> variant\nSNAFU context selector for the <code>Error::InvalidDeleteRequest</code> …\nSNAFU context selector for the <code>Error::InvalidExpr</code> variant\nSNAFU context selector for the <code>Error::InvalidInsertRequest</code> …\nSNAFU context selector for the <code>Error::NoExprOperand</code> variant\nContains the success value\nSNAFU context selector for the <code>Error::RegionKeysSize</code> …\nSNAFU context selector for the <code>Error::SerializeJson</code> variant\nSNAFU context selector for the <code>Error::TableRouteManager</code> …\nSNAFU context selector for the <code>Error::TableRouteNotFound</code> …\nSNAFU context selector for the <code>Error::ToDFSchema</code> variant\nSNAFU context selector for the <code>Error::UndefinedColumn</code> …\nSNAFU context selector for the <code>Error::UnexpectedColumnType</code> …\nSNAFU context selector for the …\nSNAFU context selector for the <code>Error::Unexpected</code> variant\nSNAFU context selector for the …\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nStruct for partition expression. This can be converted …\nA restricted set of Operator that can be used in partition …\nSerializes <code>PartitionExpr</code> to json string.\nConverts Self to Partition.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserializes <code>PartitionExpr</code> from json string.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the left-hand side operand\nGet the operation\nGet the right-hand side operand\nConvert Self back to sqlparser’s Expr\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nPartitionRuleManager manages the table routes and …\nFind the leader of the region.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default region number when no partition exprs are …\nMulti-Dimiension partition rule. RFC here\nNo value.\nSome value of type <code>T</code>.\nPartition expressions.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nName to index of <code>partition_columns</code>. Used for quick lookup.\nAllow list of which columns can be used for partitioning.\nCache of physical expressions.\nRegion number for each partition. This list has the same …\nCreate a new <code>MultiDimPartitionRule</code>.\nDeprecated since 0.15.0.\nThe bound of one partition.\nDeprecated since 0.9.0.\nFinds the target region by the partition values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll rows are selected.\nNo row is selected.\nSplit the record batch into multiple regions by the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")